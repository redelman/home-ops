---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  BOOTSTRAP_DIR: "{{.ROOT_DIR}}/bootstrap"
  KUBERNETES_DIR: "{{.ROOT_DIR}}/kubernetes"
  CLUSTERCONFIG_DIR: "{{.ROOT_DIR}}/clusterconfig"
  KUBECONFIG_FILE: "{{.CLUSTERCONFIG_DIR}}/kubeconfig"
  TALSECRETS_FILE: talsecrets.sops.yaml

env:
  KUBECONFIG: "{{.KUBECONFIG_FILE}}"
  TALOSCONFIG: "{{.CLUSTERCONFIG_DIR}}/talosconfig"

tasks:

  default: task -l

  init:
    desc: Performs critical first-time setup of the repo.
    cmds:
      - echo "Creating config.yaml"
      - cp config.yaml.sample config.yaml
    status: 
      - test -f config.yaml

  soft-reset: 
    desc: Resets nodes back to maintenance mode. Nodes are ready for immediate redeployment.
    prompt: This will reset your nodes, killing your kubernetes cluster. Are you sure?
    cmd: talhelper gencommand reset --extra-flags="--reboot --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL --graceful=false --wait=false" | bash

  nuke-cluster: 
    desc: Wipes the system disk and reboots nodes. Nodes will not boot from system disk after this.
    prompt: This will nuke your nodes. They will require boot media after this. Are you sure?
    cmd: talhelper gencommand reset --extra-flags="--reboot --graceful=false --wait=false" | bash

  gensecrets:
    desc: Generates Talos cluster secrets
    cmds:
      - talhelper gensecret > {{.TALSECRETS_FILE}}
      - sops -e -i {{.TALSECRETS_FILE}}
    status:
      - test -f {{.TALSECRETS_FILE}}

  gentemplates:
    desc: Generates templates from config.yaml values.
    run: once
    cmd: gomplate

  genconfig:
    desc: Generates talconfig.yaml. 
    run: once
    cmds:
      - talhelper genconfig
    status:
      - test -f talconfig.yaml
  
  apply-init:
    desc: Applies talos machine configurations to all nodes.
    internal: true
    run: once
    cmd: talhelper gencommand apply --extra-flags="--insecure" | bash
    deps: [gensecrets, genconfig]

  apply:
    desc: Applies talos machine configurations to all nodes
    cmd: talhelper gencommand apply | bash

  bootstrap:
    desc: Bootstraps a new cluster
    cmds:
      - until talhelper gencommand bootstrap | bash; do sleep 10; done
      - sleep 10
  
  kubeconfig:
    desc: Fetches the kubeconfig from Talos
    cmd: until talhelper gencommand kubeconfig --extra-flags="--force" | bash; do sleep 10; done

  cilium-init:
    desc: Uses helmfile to install cilium with initial (not full) config.
    run: once
    internal: true
    cmds:
      - until kubectl --kubeconfig {{.KUBECONFIG_FILE}} wait --for=condition=Ready=False nodes --all --timeout=600s; do sleep 10; done
      - helmfile --file {{.BOOTSTRAP_DIR}}/helmfile.yaml apply --skip-diff-on-install --suppress=diff
      - until kubectl --kubeconfig {{.KUBECONFIG_FILE}} wait --for=condition=Ready nodes --all --timeout=600s; do sleep 10; done

  flux:
    desc: Bootstraps FluxCD into a new cluster
    cmd:  flux bootstrap github --owner=redelman --repository=home-ops --branch=main --path=/kubernetes --private=false --personal=true --cluster-domain spyrja.internal

  install-minimal:
    desc: Applies Talos machine configs, bootstraps etcd, and installs cilium
    cmds:
      - task: gensecrets
      - task: gentemplates
      - task: genconfig
      - task: apply-init
      - task: bootstrap
      - task: kubeconfig
      - task: cilium-init
      - task: health
  
  install:
    desc: Installs and fully configures a new kubernetes cluster
    cmds:
      - task: install-minimal
      - task: flux

  rollback-talos:
    desc: Rolls back the last Talos update.

  upgrade-talos:
    desc: Upgrades Talos to a newer version
    cmd: talhelper gencommand upgrade | bash

  upgrade-talos-staged:
    desc: Stages an upgrade for Talos. Must reboot the node for the upgrade to take affect.
    cmd: talhelper gencommand upgrade --extra-flags="--stage" | bash

  upgrade-k8s:
    desc: Upgrades Kubernetes to a newer version
    cmd: talhelper gencommand upgrade-k8s | bash

  health:
    desc: Runs healthchecks on the cluster
    cmd: talosctl health --server=false

  repo-reset:
    desc: Deletes all generated files, except your config.yaml
    prompt: You will lose access to your cluster after doing this. Are you sure?
    cmds:
      - rm -rf {{.CLUSTERCONFIG_DIR}}
      - rm -f {{.TALSECRETS_FILE}}
      - rm -f talconfig.yaml
      - rm -f {{.BOOSTRAP_DIR}}/cilium-init-values.yaml