# Name of your kubernetes cluster. Defaults to home-kubernetes
cluster_name: home-kubernetes

# cluster_domain defaults to "cluster.local" if not specified.
# Note that setting this may lead to DNS problems if other apps (like fluxcd)
# assume a default cluster domain and you do not set it.
# If unsure, leave this commented to use the default value
cluster_domain: cluster.local

# IP address for the VIP to access the kubernetes api server
kubernetes_api_endpoint: 192.168.1.20

# If you want to use DNS to access the kubernetes api server,
# put that name here. The cluster_domain will be added to it.
kubernetes_apiserver_name: kubernetes

# The network your nodes are on
node_network: 192.168.1.0/24

# Default gateway for your nodes. Defaults to x.x.x.1.
# Ignored if using dhcp.
# FIXME: Actually use this value as approprite in the template
default_gateway: 192.168.1.1

# NTP server for your nodes, if you have one. Defaults to pool.ntp.org.
# This is not ignored if using dhcp, since it's not always passed to the
# dhcp client.
ntp_servers:
  - 192.168.1.1

# If your nodes are configured to use DHCP, set this to true.
# Note that this setting affects all nodes.
dhcp: true

# Nameservers for your nodes. If unknown, leave as default. If your nodes use
# dhcp, this value is ignored.
nameservers: 
  - 8.8.8.8
  - 8.8.4.4

# The network your pods will use. Safe to leave as default below.
pod_network: 10.244.0.0/16
# The network your services will use. Safe to leave as default below.
service_network: 10.96.0.0/16

bootstrap_talos:
  # If you need any additional system extensions, list them here. Image Factory will
  # automatically be used to create a schematic id.
  # extensions:
  #   - siderolabs/gvisor
  #   - siderolabs/intel-ucode
  #   - siderolabs/i915
  
  # If you need any extra kernel parameters, this is the place.
  # If you don't, leave this commented.
  #extra_kernel_args: ["net.ifnames=0", "biosdevname=0"]

  # If you have secureboot enabled, set this to true.
  secureboot: false

  # Requires a TPM 2.0 and secureboot. Uses the TPM the encrypt the install disk.
  encrypt_disk_with_tpm: false

node_inventory: []
  # If you are running dhcp, set this to the role: controller or worker
  - hostname: controller
    # If you are running dhcp, list the addresses of the nodes here, as below.
    # Otherwise, list at least 1 IP address.
    ip_address: 192.168.1.21, 192.168.1.22, 192.168.1.23
    # The disk to install to. Talos's installSelector isn't yet supported, sorry.
    install_disk: /dev/vda
    # Change to false for worker nodes.
    controlplane: true

    # If you are running on a cloud service, or proxmox, change this as appropriate.
    # For example, on proxmox change to 'nocloud'. If you are on bare metal, you 
    # can leave this commented out.
    # mode: metal

    # If you are not on amd64, uncomment this:
    # arch: arm64

  # The following is an example ARM64 installing to an NVME drive
  # - hostname: talos-1
  #   ip_address: 10.0.42.11
  #   install_disk: /dev/nvme0n1
  #   controlplane: true
  #   mode: metal
  #   arch: arm64

### Settings to bootstrap FluxCD
bootstrap_fluxcd:
  # If you want to use fluxcd, set this to true
  enabled: False

  # URL to your git repo. Suggest to use ssh:// access
  repo_url: 

  # Branch to use. Defaults to 'main'
  branch_name: main

  # Path to the SSH key to use. It must have read/write access. Suggested
  # to use a separate user for FluxCD if at all possible. If you're using 
  # github and not a separate user (for personal repos, for example), this
  # must be set as a deploy key in the repo settings. If you don't have an
  # ssh key, onecan be automatically generated for you by running 
  # `task gen-ssh-key`.
  ssh_key_file: id_ed25519
